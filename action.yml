name: 'PublishNuget'
description: 'GitHub action to automate publishing NuGet packages when project version changes.'
branding:
  icon: package
  color: green
inputs:
  name:
    description:
      'The name of the NuGet package.'
    required: true
  project_file_path:
    description:
      'The relative path of the project file.'
    required: true
  version_file_path:
    description:
      'The relative path of the version file.'
    required: false
  version_regex:
    description:
      'The regex pattern which is used to extract the version info. Defaults to "^<Version>(.*)<\/Version>".'
    required: false
    default: '<Version>(.*)<\/Version>'
  tag_format:
    description:
      'Format of the git tag. [*] gets replaced with the actual version number. Defaults to v[*].'
    required: false
    default: 'v[*]'
  tag_commit:
    description:
      'Determines whether or not to create a git tag. Defaults to true.'
    required: false
    default: 'true'
  nuget_key:
    description:
      'An API key to authenticate with the NuGet server.'
    required: true
  include_symbols:
    description:
      'Determines whether or not to push symbols along with the NuGet package. Defaults to false.'
    required: false
    default: 'false'
  fail_on_build_error:
    description:
      'Determines whether or not to fail on a build/pack error. Defaults to true.'
    required: false
    default: 'true'
runs:
  using: 'docker'
  image: './src/PublishNuget/Dockerfile'
  args:
  - '--name'
  - ${{ inputs.name }}
  - '--project-file-path'
  - ${{ inputs.project_file_path }}
  - '--version-file-path'
  - ${{ inputs.version_file_path }}
  - '--version-regex'
  - ${{ inputs.version_regex }}
  - '--tag-format'
  - ${{ inputs.tag_format }}
  - '--nuget-key'
  - ${{ inputs.nuget_key }}
  - '--tag-commit'
  - ${{ inputs.tag_commit }}
  - '--include-symbols'
  - ${{ inputs.include_symbol }}
  - '--fail-on-build-error'
  - ${{ inputs.fail_on_build_error }}